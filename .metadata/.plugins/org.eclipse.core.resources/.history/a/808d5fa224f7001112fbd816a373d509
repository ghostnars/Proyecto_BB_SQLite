package mypackage;

import net.rim.device.api.system.Display;
import net.rim.device.api.ui.Color;
import net.rim.device.api.ui.Field;
import net.rim.device.api.ui.FieldChangeListener;
import net.rim.device.api.ui.Graphics;
import net.rim.device.api.ui.Manager;
import net.rim.device.api.ui.TouchEvent;
import net.rim.device.api.ui.Touchscreen;
import net.rim.device.api.ui.component.NullField;
import net.rim.device.api.ui.container.HorizontalFieldManager;

/**
 * A class extending the MainScreen class, which provides default standard
 * behavior for BlackBerry GUI applications.
 */
public final class MyScreen extends Metodos implements FieldChangeListener
{
    /**
     * Creates a new MyScreen object
     */
	Config ver = new Config();
	Config statement = new Config();
	int background_color=0;
	int i;
	  HorizontalFieldManager hfmrow;
    public MyScreen()
    {        
  
    	for(i=0;i<5;i++){
    	hfmrow=new HorizontalFieldManager(Manager.USE_ALL_WIDTH|Field.FOCUSABLE){
	         protected void sublayout(int maxWidth, int maxHeight) {
	                int height=40;
	            super.sublayout(Display.getWidth(), height);
	            setExtent(Display.getWidth(), height);
	        }
	        protected void paint(Graphics graphics) {
	 
	            graphics.setBackgroundColor(background_color);
	            graphics.clear();
	            invalidate();
	            super.paint(graphics);
	        }
	        protected void onFocus(int direction) {
	            super.onFocus(direction);
	            background_color=Color.RED;
	            invalidate();
	        }
	        protected void onUnfocus() {
	            invalidate();
	            background_color=Color.GREEN;
	 
	        }
	        protected boolean navigationClick(int status, int time) {
	 
	            if(Touchscreen.isSupported()){
	                return false;
	            }else{
	                fieldChangeNotify(1);
	                return true;
	            }
	 
	        }
	        protected boolean touchEvent(TouchEvent message)
	        {
	            if (TouchEvent.CLICK == message.getEvent())
	            {
	                FieldChangeListener listener = getChangeListener();
	                if (null != listener)
	                    this.setFocus();
	                    listener.fieldChanged(this, 1);
	            }
	            return super.touchEvent(message);
	        }
	    };
	    


	    hfmrow.setChangeListener(this);
       hfmrow.setMargin(10, 0, 0, 0);
       hfmrow.add(new NullField(Field.FOCUSABLE));
       
 
       
       add(hfmrow);
    	}
		
		
 }

    public void llamar(){
    	openScreen(new materiaLista());
    	
    
    }
	public void fieldChanged(Field field, int context) {
		// TODO Auto-generated method stub
		
	}
}
